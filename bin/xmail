#!/usr/bin/env php
<?php
error_reporting(E_ALL ^ E_STRICT);
date_default_timezone_set('UTC');
set_time_limit(0);

if (PHP_SAPI !== 'cli') {
    echo 'Warning: Script should be invoked via the CLI version of PHP, not the '.PHP_SAPI.' SAPI'.PHP_EOL;
}

$paths = [
    getcwd().'/../vendor/autoload.php',
    getcwd().'/vendor/autoload.php',
    __DIR__ . '/../../autoload.php',
    __DIR__ . '/../vendor/autoload.php',
    __DIR__ . '/vendor/autoload.php',
    __DIR__ . 'vendor/autoload.php'
];
foreach ($paths as $file) {
    if (file_exists($file)) {
        define('AUTOLOADER', $file);
        break;
    }
}
unset($file);

/**
 * Command Line launcher
 */
use Symfony\Component\Console\Application;
use Deliveries\Console\Application as App;
use Deliveries\Console\Command;
use Deliveries\Aware\Handlers\EventEmitter;

if(file_exists(AUTOLOADER) === true) {

    include AUTOLOADER;

    // init console event emitter
    $eventDispatcher = new EventEmitter();

    if(App::VERBOSE === true) {
        $eventDispatcher->beforeExecuteCommand();
        $eventDispatcher->afterExecuteCommand();
    }

    $eventDispatcher->beforeException();

    $console = new Application(App::NAME, App::VERSION);
    $console->setDispatcher($eventDispatcher);
    $console->add(new Command\Init('init'));
    $console->add(new Command\Migrations('migrations'));
    $console->add(new Command\Statistics('statistics'));
    $console->add(new Command\Create('create'));
    $console->add(new Command\Run('run'));
    $console->add(new Command\Process('process'));
    $console->add(new Command\Check('check'));
    $console->run();
}
else {
    exit('Can not find autoloader');
}